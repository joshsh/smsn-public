@id jwMVlZyyIR9ygNlU
@title ? could doTick be made more accurate by swapping these two lines
@created 1509577668923
@text ```
I may have found a way to make Tidal's timing more stable.

In Network.hs, there's a function, "doTick", which waits unti the very moment that tick t happens, and then calls "onTick" (in Stream.hs). In particular, there appear these two lines:

    threadDelay $ floor $ delay * 1000000
    onTick tempo targetTick

onTick figures out what happens between targetTick and targetTick+1, and sends those events to the backend.

When I was looking into writing my own sequencer, in 2015, someone (Rohan Drape?) advised against relying too heavily on threadDelay; he said that some other clock would be more reliable.

If the two lines quoted above were reversed, it seems, you could avoid the possibility that Tidal sends an instruction to SuperCollider after the tme to execute it has already passed.

Or if you wanted to preserve some of the just-in-time flavor but still preserve a buffer, you could do this:

    threadDelay $ floor $ delay * (1000000 * 9/10)
    onTick tempo targetTick
    threadDelay $ floor $ delay * (1000000 / 10)
    onTick tempo targetTick
```
