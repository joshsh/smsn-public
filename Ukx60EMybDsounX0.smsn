@id Ukx60EMybDsounX0
@title in all files of varying extensions, replace a capture group
@created 1505004030346
@text ```
find . -name "*.hs" -print0 -o -name "*.txt" -print0 -o -name "*.md" -print0 | xargs -0 sed -i -r 's/([^a-zA-Z0-9\d]|^)insRel([^a-zA-Z0-9\d]|$)/\1insRelStrErr\2/g'

find's -o is "or" for expressions
find needs -print0 after each expression
the combination of find * -print0 and xrags -0 is magic
sed's -i edits the files in place (destructive)
sed's r command uses "extended regexp"
the regular expressions say to find $1 bounded on the left either by newline or a non-digit, non-alpha, on the right by either end of line or same
I don't know what \d stands for in those regexps. You might guess a digit, but StackOverflow says that would be wrong[1].
the above finds "insRel" bounded on neither side by a letter or number
  and replaces it with insRelStrErr
I think the \1..\2 notation says "the included group between the first two excluded groups"


[1] regex - Why doesn't `\d` work in regular expressions in sed? - Stack Overflow (web page)
                @alias https://stackoverflow.com/questions/14671293/why-doesnt-d-work-in-regular-expressions-in-sed
```
@weight 0.75
