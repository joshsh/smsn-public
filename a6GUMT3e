* :6GUMT3e: RenameMe
    @created 1483084342959
    @sharability 0.75
    @weight 0.5

My both_kb/it holds a neo4j graph, and both_kb/vcs holds a vcs-friendly rendering of a graph. both_kb uses the smsn-universal and smsn-public repositories at git/. I need to do something similar for the two private values.

it/ can be exported to vcs/ using
     (kbd "C-c C-w c")       'brain-export-vcs-prompt)

There is also import-vcs. That is a cumulative operator, correct? That is, if I import a new graph with one node, I still keep all my earlier nodes, right?

I should pull josh's changes to the public parts of vcs/ and import again to the graph, using the pull-collab script. (What is pull-master for?) The git diff of those changes will be theoretically meaningful, but reading edge changes currently requires a lot of human lookup.

After getting Josh's changes, I should commit my own, which means first exporting from the graph and then using add.sh and commit.sh. (Do you ever use those separately?)

That will get our shared graphs in roughly comparable shape. To import the changes I made to jeff_kb into both_kb, is there anything cleverer I can do than a by-hand copy? (I kept them all under a parent called something like "new since both_kb".)