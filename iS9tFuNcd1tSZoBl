* :iS9tFuNcd1tSZoBl: RenameMe
    @created 1343080202277
    @sharability 0.75
    @weight 0.5

# use the export service from Brain-mode, then:
v <- read.table(file("/tmp/joshkb-vertices.tsv"), header=TRUE, sep="\t", quote="", comment.char="")

# find notes with duplicate aliases
tmp <- data.frame(alias=subset(data.frame(v, d=duplicated(v$alias), l=nchar(as.vector(v$alias))), l > 0 & d == TRUE)$alias)
merge(tmp, v, by="alias")

# non-trivial links
l <- subset(v, nchar(as.character(v$alias)) > 0)
# 4806 non-trivial links as of 2013-04-23
* 7849 as of 2015-01-03
nrow(l)

# DBpedia links
d <- subset(v, substr(alias, 1, 28) == "http://dbpedia.org/resource/")
# 3561 DBpedia links as of 2013-04-23
# 5792 as of 2015-01-03
nrow(d)

#########################################
# top domains of alias links

domain <- function(url) {
    tmp <- str_locate(url, "://")
    url <- substr(url, tmp[2] + 1, nchar(url))
    tmp <- str_locate(url, "/")
    if (!is.na(tmp[1])) {
        url <- substr(url, 1, tmp[1] - 1)
    }
    url
}

lac <- as.character(l$alias)
domains <- sapply(lac, domain)
tab <- table(as.vector(domains))
df <- as.data.frame(tab)
df2 <- df[with(df, order(-Freq)), ]

# as of 2013-06-14:
# 74% dbpedia.org
#  5% mail.google.com
#  1% github.com
#  1% www.sparkfun.com
df2[1:100,]


#########################################
# distance from DBpedia-linked atoms

v <- read.table(file("/tmp/joshkb-vertices.tsv"), header=TRUE, sep="\t", quote="", comment.char="")
e <- read.table(file("/tmp/joshkb-edges.tsv"), header=TRUE)
d <- subset(v, substr(alias, 1, 28) == "http://dbpedia.org/resource/")

did <- d$id

merge.dbpedia.ids <- function(id) {
    if (id %in% did) "DBPEDIA" else id
}

# note: this takes much longer without as.vector
e.merged <- data.frame(
    from=sapply(as.vector(e$from), merge.dbpedia.ids),
    to=sapply(as.vector(e$to), merge.dbpedia.ids))


from <- sapply(e$from, merge.dbpedia.ids)

library(igraph)

g <- graph.data.frame(e.merged)

# confirm that this is the "DBPEDIA" vertex
V(g)[1]

vs <- as.vector(c(1))
sp <- shortest.paths(g, v=vs)

df <- data.frame(len=as.vector(sp-1))
df <- subset(df, len >= 0)

t <- table(df$len)
display <- c(nrow(d), t[2:length(t)])
pdf("/tmp/steps-from-dbpedia-atoms.pdf", width=5, height=2)
par(mar=c(2,5,2,1.5))
barplot(display, ylab="total atoms")
dev.off()

# TODO: is.inf?
df2 <- subset(df, len <= 100)
t2 <- table(df2)
totals <- c(nrow(d), t2[2:length(t2)])
[0:(length(totals)+1)]*totals

# hmm, why are we missing 14% of vertices?
sum(totals)/nrow(v)

# anyway, we'll call it 2.35 steps on average
s <- sum((0:(length(totals)-1))*totals)
s / sum(totals)

# TODO: is.inf?
mean(subset(df, len <= 100)$len)