@id PhqlifoEpENH9IZP
@title RenameMe
@created 1339612519125
@weight 0.5

# note: escaped characters are not considered
v <- read.table(file("/tmp/joshkb-vertices.tsv"), header=TRUE, sep="\t", quote="", comment.char="")
values <- v$value
len = nchar(values)

# around 64 characters on average (but this is not a normal distribution)
mean(len)

# Poisson distribution can be ruled out. This should be equal to 1 otherwise.
mean(len)/(sd(len) ^ 2)

# estimate kernel density
plot(density(len, from=0, to=200))


plot(ecdf(nchar(values)),main="Empirical cum. dist.", xlim=c(0, 500))


################################################################################
# oddball notes

# Find length-0 values (there shouldn't be any)
subset(v, nchar(as.character(v$value)) == 0)

# Find length-1 values (as of 2012-07-12, there aren't any, but they're legal)
val1 <- subset(v, nchar(as.character(v$value)) == 1)
data.frame(val1$id, val1$value)


#########################################
# Just for fun, try to fit the data with a gamma distribution

theta <- function(gamma.dist) { (sd(gamma.dist) ^ 2) / mean(gamma.dist)}
alpha <- function(gamma.dist) { mean(gamma.dist) / theta(gamma.dist)}
len.gamma <- rgamma(length(len), shape=alpha(len), scale=theta(len))

# verify that the mean and variance of the distributions are very close...
mean(len)/mean(len.gamma)
sd(len)/sd(len.gamma)

# yet the curves are quite different
plot(density(len, from=0, to=200))
lines(density(len.gamma, from=0, to=200), col="blue")

# log of len.gamma is very different, as well.
# It looks nothing like a normal distribution
plot(density(log(len.gamma)))


#########################################
# try to fit the data with a log-normal distribution

loglen = log(len)

# the log certainly *looks* normally-distributed
plot(density(loglen))

mean(loglen)/mean(loglen.norm)
sd(loglen)/sd(loglen.norm)

# estimate goodness-of-fit of log-normal distribution
# It's definitely not a perfect fit.
z <- (loglen - mean(loglen)) / sd(loglen)
qqnorm(z)
abline(0,1)

# Compare the distributions visually
plot(density(len, from=0, to=200))
lines(density(exp(loglen.norm), from=0, to=200), col="red")

# Compare log-distributions visually
# They're pretty close, but the actual distro is "skinnier, and skews to the left"
loglen.norm <- rnorm(length(loglen), mean=mean(loglen), sd=sd(loglen))
plot(density(loglen))
lines(density(loglen.norm), col="red")

# Show the difference between actual and predicted distributions
min <- 0
max <- 200
d.len <- density(len, from=min, to=max)
d.len.norm <- density(exp(loglen.norm), from=min, to=max)
diff <- d.len$y - d.len.norm$y
plot(diff, x=d.len$x, type="l")
abline(h=0)

# roots
f <- approxfun(d.len$x, diff)
# 7.547115, 
root1 <- uniroot(f, interval=c(0,15))
# 46.8836
root2 <- uniroot(f, interval=c(15,80))

df <- data.frame(d.len.norm$x, d.len.norm$y)
df.diff <- data.frame(d.len$x, diff)
# -0.1707804
sum(subset(df.diff, d.len.x <= root1)$diff)/sum(subset(df, d.len.norm.x <= root1)$d.len.norm.y)
# 0.09355527
sum(subset(df.diff, d.len.x > root1 & d.len.x <= root2)$diff)/sum(subset(df, d.len.norm.x > root1 & d.len.norm.x <= root2)$d.len.norm.y)
# -0.0214103
sum(subset(df.diff, d.len.x > root2)$diff)/sum(subset(df, d.len.norm.x > root2)$d.len.norm.y)

* 42
    * values between 0 and 8 chars in length are 21% less common than the log-normal distribution predicts
    * maximum discrepancy at length 2
* length-8
    * notes of length 8 are as common as predicted
    * notes longer than 8 and shorter than 47 are 9% more common than predicted
* length-15 notes
    * are the most common (predicted and actual), however the peak at 15 is higher than predicted.
* notes with 47 chars are as common as we predict
    * notes with more than 47 chars are 2% less common than predicted, but approach the predicted probabilities asymptotically
* for some reason, notes 80 characters long are much less common than predicted